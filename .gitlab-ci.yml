image: "php:7.2.17-apache-stretch"

services:
  - mysql:5.7
  # Add elasticsearch here as well.

variables:
  INSTANCE_URL: http://localhost
  DATABASE_DRIVER: MYSQL
  DATABASE_NAME: automated_tests
  DATABASE_HOST: mysql
  DATABASE_USER: automated_tests
  DATABASE_PASSWORD: automated_tests
  MYSQL_DATABASE: automated_tests
  MYSQL_USER: automated_tests
  MYSQL_ROOT_PASSWORD: automated_tests
  MYSQL_ALLOW_EMPTY_PASSWORD: "1"
  INSTANCE_ADMIN_USER: admin
  INSTANCE_ADMIN_PASSWORD: admin1
  COMPOSER_MEMORY_LIMIT: -1

.default_before_script_template:
  before_script: &default_before_script_definition
    - bash tests/docker_install.sh > /dev/null
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php');"
    - php composer.phar install

.php_codecept_before_script_template:
  before_script: &php_codecept_before_script_definition
    - bash tests/docker_install.sh > /dev/null
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php');"
    - php composer.phar install
    # gnupg and apt-transport-https are necessary for installing Chrome.
    - apt-get update -y && apt-get install -yy mysql-client gnupg apt-transport-https
    - curl -sSL https://dl.google.com/linux/linux_signing_key.pub | apt-key add - && echo "deb https://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
    - apt-get update -qqy && apt-get install -yy google-chrome-stable
    - wget https://chromedriver.storage.googleapis.com/74.0.3729.6/chromedriver_linux64.zip
    - unzip -o chromedriver_linux64.zip
    - ./chromedriver --url-base=/wd/hub &
    - ./vendor/bin/codecept build
    - ln -s $(pwd) /var/www/html
    - service apache2 restart

# Use anchors to reuse common configuration options.
# https://docs.gitlab.com/ee/ci/yaml/README.html#anchors
.php: &php
  before_script: *php_codecept_before_script_definition
  script:
    # Run install wizard
    - ./vendor/bin/codecept run install --env travis-ci-hub -f -d --ext DotReporter
    - ./build/push_output.sh
    # Run API functional tests
    - ./vendor/bin/codecept run tests/api/V8/ -f -vvv
    # Run basic acceptance tests
    - ./vendor/bin/codecept run acceptance --env travis-ci-hub -f -vvv
  # Save 'var/log/apache2/error.log' and 'suitecrm.log' as artifacts
  # https://docs.gitlab.com/ee/user/project/pipelines/job_artifacts.html
  artifacts:
    paths:
      - var/log/apache2/error.log
      - suitecrm.log
    expire_in: 2 weeks

php-lint:
  before_script: *default_before_script_definition
  script:
    - for file in $(git diff --name-status HEAD~1 HEAD | egrep "^[ACMR].*\.php$" | cut -c 3-); do php -l $file; done

php:7.2:
  <<: *php
  # Cache composer packages for reuse on the next run of the test suite.
  cache:
    # Set a key for the cache, e.g. based on the PHP version.
    key: 'php-7.2'
    paths:
      - vendor/
